// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package repo

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUser = `-- name: GetUser :one
SELECT id, email, display_name, photo_url, admin, created_at, updated_at FROM users
WHERE id = $1
`

func (q *Queries) GetUser(ctx context.Context, id string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.DisplayName,
		&i.PhotoUrl,
		&i.Admin,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, display_name, photo_url, admin, created_at, updated_at FROM users
WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.DisplayName,
		&i.PhotoUrl,
		&i.Admin,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const upsertUser = `-- name: UpsertUser :one
INSERT INTO users (id, email, display_name, photo_url, admin)
VALUES ($1, $2, $3, $4, $5)
ON CONFLICT (id) DO UPDATE SET
  email = EXCLUDED.email,
  display_name = EXCLUDED.display_name,
  photo_url = EXCLUDED.photo_url,
  admin = EXCLUDED.admin,
  updated_at = clock_timestamp()
RETURNING id, email, display_name, photo_url, admin, created_at, updated_at, (xmax = 0) AS was_created
`

type UpsertUserParams struct {
	ID          string
	Email       string
	DisplayName string
	PhotoUrl    pgtype.Text
	Admin       bool
}

type UpsertUserRow struct {
	ID          string
	Email       string
	DisplayName string
	PhotoUrl    pgtype.Text
	Admin       bool
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	WasCreated  bool
}

func (q *Queries) UpsertUser(ctx context.Context, arg UpsertUserParams) (UpsertUserRow, error) {
	row := q.db.QueryRow(ctx, upsertUser,
		arg.ID,
		arg.Email,
		arg.DisplayName,
		arg.PhotoUrl,
		arg.Admin,
	)
	var i UpsertUserRow
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.DisplayName,
		&i.PhotoUrl,
		&i.Admin,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.WasCreated,
	)
	return i, err
}
