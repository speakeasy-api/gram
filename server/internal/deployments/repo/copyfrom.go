// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package repo

import (
	"context"
)

// iteratorForBatchLogEvents implements pgx.CopyFromSource.
type iteratorForBatchLogEvents struct {
	rows                 []BatchLogEventsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchLogEvents) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchLogEvents) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].DeploymentID,
		r.rows[0].ProjectID,
		r.rows[0].Event,
		r.rows[0].Message,
		r.rows[0].AttachmentID,
		r.rows[0].AttachmentType,
	}, nil
}

func (r iteratorForBatchLogEvents) Err() error {
	return nil
}

func (q *Queries) BatchLogEvents(ctx context.Context, arg []BatchLogEventsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"deployment_logs"}, []string{"deployment_id", "project_id", "event", "message", "attachment_id", "attachment_type"}, &iteratorForBatchLogEvents{rows: arg})
}
