// Code generated by goa v3.22.3, DO NOT EDIT.
//
// logs client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package logs

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "logs" service client.
type Client struct {
	ListLogsEndpoint goa.Endpoint
}

// NewClient initializes a "logs" service client given the endpoints.
func NewClient(listLogs goa.Endpoint) *Client {
	return &Client{
		ListLogsEndpoint: listLogs,
	}
}

// ListLogs calls the "listLogs" endpoint of the "logs" service.
// ListLogs may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) ListLogs(ctx context.Context, p *ListLogsPayload) (res *ListToolLogResponse, err error) {
	var ires any
	ires, err = c.ListLogsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListToolLogResponse), nil
}
