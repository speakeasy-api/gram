// Code generated by goa v3.22.2, DO NOT EDIT.
//
// packages client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package packages

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "packages" service client.
type Client struct {
	CreatePackageEndpoint goa.Endpoint
	UpdatePackageEndpoint goa.Endpoint
	ListPackagesEndpoint  goa.Endpoint
	ListVersionsEndpoint  goa.Endpoint
	PublishEndpoint       goa.Endpoint
}

// NewClient initializes a "packages" service client given the endpoints.
func NewClient(createPackage, updatePackage, listPackages, listVersions, publish goa.Endpoint) *Client {
	return &Client{
		CreatePackageEndpoint: createPackage,
		UpdatePackageEndpoint: updatePackage,
		ListPackagesEndpoint:  listPackages,
		ListVersionsEndpoint:  listVersions,
		PublishEndpoint:       publish,
	}
}

// CreatePackage calls the "createPackage" endpoint of the "packages" service.
// CreatePackage may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) CreatePackage(ctx context.Context, p *CreatePackagePayload) (res *CreatePackageResult, err error) {
	var ires any
	ires, err = c.CreatePackageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreatePackageResult), nil
}

// UpdatePackage calls the "updatePackage" endpoint of the "packages" service.
// UpdatePackage may return the following errors:
//   - "not_modified" (type *NotModified)
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) UpdatePackage(ctx context.Context, p *UpdatePackagePayload) (res *UpdatePackageResult, err error) {
	var ires any
	ires, err = c.UpdatePackageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdatePackageResult), nil
}

// ListPackages calls the "listPackages" endpoint of the "packages" service.
// ListPackages may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) ListPackages(ctx context.Context, p *ListPackagesPayload) (res *ListPackagesResult, err error) {
	var ires any
	ires, err = c.ListPackagesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListPackagesResult), nil
}

// ListVersions calls the "listVersions" endpoint of the "packages" service.
// ListVersions may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) ListVersions(ctx context.Context, p *ListVersionsPayload) (res *ListVersionsResult, err error) {
	var ires any
	ires, err = c.ListVersionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListVersionsResult), nil
}

// Publish calls the "publish" endpoint of the "packages" service.
// Publish may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Publish(ctx context.Context, p *PublishPayload) (res *PublishPackageResult, err error) {
	var ires any
	ires, err = c.PublishEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PublishPackageResult), nil
}
