// Code generated by goa v3.22.6, DO NOT EDIT.
//
// resources HTTP client CLI support package
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package client

import (
	"fmt"
	"strconv"

	resources "github.com/speakeasy-api/gram/server/gen/resources"
)

// BuildListResourcesPayload builds the payload for the resources listResources
// endpoint from CLI flags.
func BuildListResourcesPayload(resourcesListResourcesCursor string, resourcesListResourcesLimit string, resourcesListResourcesDeploymentID string, resourcesListResourcesSessionToken string, resourcesListResourcesProjectSlugInput string) (*resources.ListResourcesPayload, error) {
	var err error
	var cursor *string
	{
		if resourcesListResourcesCursor != "" {
			cursor = &resourcesListResourcesCursor
		}
	}
	var limit *int32
	{
		if resourcesListResourcesLimit != "" {
			var v int64
			v, err = strconv.ParseInt(resourcesListResourcesLimit, 10, 32)
			val := int32(v)
			limit = &val
			if err != nil {
				return nil, fmt.Errorf("invalid value for limit, must be INT32")
			}
		}
	}
	var deploymentID *string
	{
		if resourcesListResourcesDeploymentID != "" {
			deploymentID = &resourcesListResourcesDeploymentID
		}
	}
	var sessionToken *string
	{
		if resourcesListResourcesSessionToken != "" {
			sessionToken = &resourcesListResourcesSessionToken
		}
	}
	var projectSlugInput *string
	{
		if resourcesListResourcesProjectSlugInput != "" {
			projectSlugInput = &resourcesListResourcesProjectSlugInput
		}
	}
	v := &resources.ListResourcesPayload{}
	v.Cursor = cursor
	v.Limit = limit
	v.DeploymentID = deploymentID
	v.SessionToken = sessionToken
	v.ProjectSlugInput = projectSlugInput

	return v, nil
}
