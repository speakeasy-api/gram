// Code generated by goa v3.22.3, DO NOT EDIT.
//
// mcpInstallPage HTTP server types
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package server

import (
	"unicode/utf8"

	mcpinstallpage "github.com/speakeasy-api/gram/server/gen/mcp_install_page"
	types "github.com/speakeasy-api/gram/server/gen/types"
	goa "goa.design/goa/v3/pkg"
)

// SetInstallPageMetadataRequestBody is the type of the "mcpInstallPage"
// service "setInstallPageMetadata" endpoint HTTP request body.
type SetInstallPageMetadataRequestBody struct {
	// The slug of the toolset associated with this install page metadata
	ToolsetSlug *string `form:"toolset_slug,omitempty" json:"toolset_slug,omitempty" xml:"toolset_slug,omitempty"`
	// The asset ID for the MCP install page logo
	LogoAssetID *string `form:"logo_asset_id,omitempty" json:"logo_asset_id,omitempty" xml:"logo_asset_id,omitempty"`
	// A link to external documentation for the MCP install page
	ExternalDocumentationURL *string `form:"external_documentation_url,omitempty" json:"external_documentation_url,omitempty" xml:"external_documentation_url,omitempty"`
}

// GetInstallPageMetadataResponseBody is the type of the "mcpInstallPage"
// service "getInstallPageMetadata" endpoint HTTP response body.
type GetInstallPageMetadataResponseBody struct {
	// Metadata for the MCP install page
	Metadata *MCPInstallPageMetadataResponseBody `form:"metadata,omitempty" json:"metadata,omitempty" xml:"metadata,omitempty"`
}

// SetInstallPageMetadataResponseBody is the type of the "mcpInstallPage"
// service "setInstallPageMetadata" endpoint HTTP response body.
type SetInstallPageMetadataResponseBody struct {
	// The ID of the metadata record
	ID string `form:"id" json:"id" xml:"id"`
	// The toolset associated with this install page metadata
	ToolsetID string `form:"toolset_id" json:"toolset_id" xml:"toolset_id"`
	// The asset ID for the MCP install page logo
	LogoAssetID *string `form:"logo_asset_id,omitempty" json:"logo_asset_id,omitempty" xml:"logo_asset_id,omitempty"`
	// A link to external documentation for the MCP install page
	ExternalDocumentationURL *string `form:"external_documentation_url,omitempty" json:"external_documentation_url,omitempty" xml:"external_documentation_url,omitempty"`
	// When the metadata entry was created
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// When the metadata entry was last updated
	UpdatedAt string `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// GetInstallPageMetadataUnauthorizedResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "unauthorized" error.
type GetInstallPageMetadataUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataForbiddenResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "forbidden" error.
type GetInstallPageMetadataForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataBadRequestResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "bad_request" error.
type GetInstallPageMetadataBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataNotFoundResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "not_found" error.
type GetInstallPageMetadataNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataConflictResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "conflict" error.
type GetInstallPageMetadataConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataUnsupportedMediaResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "unsupported_media" error.
type GetInstallPageMetadataUnsupportedMediaResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataInvalidResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "invalid" error.
type GetInstallPageMetadataInvalidResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataInvariantViolationResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "invariant_violation" error.
type GetInstallPageMetadataInvariantViolationResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataUnexpectedResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "unexpected" error.
type GetInstallPageMetadataUnexpectedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetInstallPageMetadataGatewayErrorResponseBody is the type of the
// "mcpInstallPage" service "getInstallPageMetadata" endpoint HTTP response
// body for the "gateway_error" error.
type GetInstallPageMetadataGatewayErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataUnauthorizedResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "unauthorized" error.
type SetInstallPageMetadataUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataForbiddenResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "forbidden" error.
type SetInstallPageMetadataForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataBadRequestResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "bad_request" error.
type SetInstallPageMetadataBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataNotFoundResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "not_found" error.
type SetInstallPageMetadataNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataConflictResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "conflict" error.
type SetInstallPageMetadataConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataUnsupportedMediaResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "unsupported_media" error.
type SetInstallPageMetadataUnsupportedMediaResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataInvalidResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "invalid" error.
type SetInstallPageMetadataInvalidResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataInvariantViolationResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "invariant_violation" error.
type SetInstallPageMetadataInvariantViolationResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataUnexpectedResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "unexpected" error.
type SetInstallPageMetadataUnexpectedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// SetInstallPageMetadataGatewayErrorResponseBody is the type of the
// "mcpInstallPage" service "setInstallPageMetadata" endpoint HTTP response
// body for the "gateway_error" error.
type SetInstallPageMetadataGatewayErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// MCPInstallPageMetadataResponseBody is used to define fields on response body
// types.
type MCPInstallPageMetadataResponseBody struct {
	// The ID of the metadata record
	ID string `form:"id" json:"id" xml:"id"`
	// The toolset associated with this install page metadata
	ToolsetID string `form:"toolset_id" json:"toolset_id" xml:"toolset_id"`
	// The asset ID for the MCP install page logo
	LogoAssetID *string `form:"logo_asset_id,omitempty" json:"logo_asset_id,omitempty" xml:"logo_asset_id,omitempty"`
	// A link to external documentation for the MCP install page
	ExternalDocumentationURL *string `form:"external_documentation_url,omitempty" json:"external_documentation_url,omitempty" xml:"external_documentation_url,omitempty"`
	// When the metadata entry was created
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// When the metadata entry was last updated
	UpdatedAt string `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// NewGetInstallPageMetadataResponseBody builds the HTTP response body from the
// result of the "getInstallPageMetadata" endpoint of the "mcpInstallPage"
// service.
func NewGetInstallPageMetadataResponseBody(res *mcpinstallpage.GetInstallPageMetadataResult) *GetInstallPageMetadataResponseBody {
	body := &GetInstallPageMetadataResponseBody{}
	if res.Metadata != nil {
		body.Metadata = marshalTypesMCPInstallPageMetadataToMCPInstallPageMetadataResponseBody(res.Metadata)
	}
	return body
}

// NewSetInstallPageMetadataResponseBody builds the HTTP response body from the
// result of the "setInstallPageMetadata" endpoint of the "mcpInstallPage"
// service.
func NewSetInstallPageMetadataResponseBody(res *types.MCPInstallPageMetadata) *SetInstallPageMetadataResponseBody {
	body := &SetInstallPageMetadataResponseBody{
		ID:                       res.ID,
		ToolsetID:                res.ToolsetID,
		LogoAssetID:              res.LogoAssetID,
		ExternalDocumentationURL: res.ExternalDocumentationURL,
		CreatedAt:                res.CreatedAt,
		UpdatedAt:                res.UpdatedAt,
	}
	return body
}

// NewGetInstallPageMetadataUnauthorizedResponseBody builds the HTTP response
// body from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataUnauthorizedResponseBody(res *goa.ServiceError) *GetInstallPageMetadataUnauthorizedResponseBody {
	body := &GetInstallPageMetadataUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataForbiddenResponseBody builds the HTTP response body
// from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataForbiddenResponseBody(res *goa.ServiceError) *GetInstallPageMetadataForbiddenResponseBody {
	body := &GetInstallPageMetadataForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataBadRequestResponseBody builds the HTTP response
// body from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataBadRequestResponseBody(res *goa.ServiceError) *GetInstallPageMetadataBadRequestResponseBody {
	body := &GetInstallPageMetadataBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataNotFoundResponseBody builds the HTTP response body
// from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataNotFoundResponseBody(res *goa.ServiceError) *GetInstallPageMetadataNotFoundResponseBody {
	body := &GetInstallPageMetadataNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataConflictResponseBody builds the HTTP response body
// from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataConflictResponseBody(res *goa.ServiceError) *GetInstallPageMetadataConflictResponseBody {
	body := &GetInstallPageMetadataConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataUnsupportedMediaResponseBody builds the HTTP
// response body from the result of the "getInstallPageMetadata" endpoint of
// the "mcpInstallPage" service.
func NewGetInstallPageMetadataUnsupportedMediaResponseBody(res *goa.ServiceError) *GetInstallPageMetadataUnsupportedMediaResponseBody {
	body := &GetInstallPageMetadataUnsupportedMediaResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataInvalidResponseBody builds the HTTP response body
// from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataInvalidResponseBody(res *goa.ServiceError) *GetInstallPageMetadataInvalidResponseBody {
	body := &GetInstallPageMetadataInvalidResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataInvariantViolationResponseBody builds the HTTP
// response body from the result of the "getInstallPageMetadata" endpoint of
// the "mcpInstallPage" service.
func NewGetInstallPageMetadataInvariantViolationResponseBody(res *goa.ServiceError) *GetInstallPageMetadataInvariantViolationResponseBody {
	body := &GetInstallPageMetadataInvariantViolationResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataUnexpectedResponseBody builds the HTTP response
// body from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataUnexpectedResponseBody(res *goa.ServiceError) *GetInstallPageMetadataUnexpectedResponseBody {
	body := &GetInstallPageMetadataUnexpectedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataGatewayErrorResponseBody builds the HTTP response
// body from the result of the "getInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewGetInstallPageMetadataGatewayErrorResponseBody(res *goa.ServiceError) *GetInstallPageMetadataGatewayErrorResponseBody {
	body := &GetInstallPageMetadataGatewayErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataUnauthorizedResponseBody builds the HTTP response
// body from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataUnauthorizedResponseBody(res *goa.ServiceError) *SetInstallPageMetadataUnauthorizedResponseBody {
	body := &SetInstallPageMetadataUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataForbiddenResponseBody builds the HTTP response body
// from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataForbiddenResponseBody(res *goa.ServiceError) *SetInstallPageMetadataForbiddenResponseBody {
	body := &SetInstallPageMetadataForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataBadRequestResponseBody builds the HTTP response
// body from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataBadRequestResponseBody(res *goa.ServiceError) *SetInstallPageMetadataBadRequestResponseBody {
	body := &SetInstallPageMetadataBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataNotFoundResponseBody builds the HTTP response body
// from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataNotFoundResponseBody(res *goa.ServiceError) *SetInstallPageMetadataNotFoundResponseBody {
	body := &SetInstallPageMetadataNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataConflictResponseBody builds the HTTP response body
// from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataConflictResponseBody(res *goa.ServiceError) *SetInstallPageMetadataConflictResponseBody {
	body := &SetInstallPageMetadataConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataUnsupportedMediaResponseBody builds the HTTP
// response body from the result of the "setInstallPageMetadata" endpoint of
// the "mcpInstallPage" service.
func NewSetInstallPageMetadataUnsupportedMediaResponseBody(res *goa.ServiceError) *SetInstallPageMetadataUnsupportedMediaResponseBody {
	body := &SetInstallPageMetadataUnsupportedMediaResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataInvalidResponseBody builds the HTTP response body
// from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataInvalidResponseBody(res *goa.ServiceError) *SetInstallPageMetadataInvalidResponseBody {
	body := &SetInstallPageMetadataInvalidResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataInvariantViolationResponseBody builds the HTTP
// response body from the result of the "setInstallPageMetadata" endpoint of
// the "mcpInstallPage" service.
func NewSetInstallPageMetadataInvariantViolationResponseBody(res *goa.ServiceError) *SetInstallPageMetadataInvariantViolationResponseBody {
	body := &SetInstallPageMetadataInvariantViolationResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataUnexpectedResponseBody builds the HTTP response
// body from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataUnexpectedResponseBody(res *goa.ServiceError) *SetInstallPageMetadataUnexpectedResponseBody {
	body := &SetInstallPageMetadataUnexpectedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewSetInstallPageMetadataGatewayErrorResponseBody builds the HTTP response
// body from the result of the "setInstallPageMetadata" endpoint of the
// "mcpInstallPage" service.
func NewSetInstallPageMetadataGatewayErrorResponseBody(res *goa.ServiceError) *SetInstallPageMetadataGatewayErrorResponseBody {
	body := &SetInstallPageMetadataGatewayErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetInstallPageMetadataPayload builds a mcpInstallPage service
// getInstallPageMetadata endpoint payload.
func NewGetInstallPageMetadataPayload(toolsetSlug string, sessionToken *string, projectSlugInput *string) *mcpinstallpage.GetInstallPageMetadataPayload {
	v := &mcpinstallpage.GetInstallPageMetadataPayload{}
	v.ToolsetSlug = types.Slug(toolsetSlug)
	v.SessionToken = sessionToken
	v.ProjectSlugInput = projectSlugInput

	return v
}

// NewSetInstallPageMetadataPayload builds a mcpInstallPage service
// setInstallPageMetadata endpoint payload.
func NewSetInstallPageMetadataPayload(body *SetInstallPageMetadataRequestBody, sessionToken *string, projectSlugInput *string) *mcpinstallpage.SetInstallPageMetadataPayload {
	v := &mcpinstallpage.SetInstallPageMetadataPayload{
		ToolsetSlug:              types.Slug(*body.ToolsetSlug),
		LogoAssetID:              body.LogoAssetID,
		ExternalDocumentationURL: body.ExternalDocumentationURL,
	}
	v.SessionToken = sessionToken
	v.ProjectSlugInput = projectSlugInput

	return v
}

// ValidateSetInstallPageMetadataRequestBody runs the validations defined on
// SetInstallPageMetadataRequestBody
func ValidateSetInstallPageMetadataRequestBody(body *SetInstallPageMetadataRequestBody) (err error) {
	if body.ToolsetSlug == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("toolset_slug", "body"))
	}
	if body.ToolsetSlug != nil {
		err = goa.MergeErrors(err, goa.ValidatePattern("body.toolset_slug", *body.ToolsetSlug, "^[a-z0-9_-]{1,128}$"))
	}
	if body.ToolsetSlug != nil {
		if utf8.RuneCountInString(*body.ToolsetSlug) > 40 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.toolset_slug", *body.ToolsetSlug, utf8.RuneCountInString(*body.ToolsetSlug), 40, false))
		}
	}
	return
}
