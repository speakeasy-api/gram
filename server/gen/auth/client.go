// Code generated by goa v3.22.2, DO NOT EDIT.
//
// auth client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "auth" service client.
type Client struct {
	CallbackEndpoint     goa.Endpoint
	LoginEndpoint        goa.Endpoint
	SwitchScopesEndpoint goa.Endpoint
	LogoutEndpoint       goa.Endpoint
	RegisterEndpoint     goa.Endpoint
	InfoEndpoint         goa.Endpoint
}

// NewClient initializes a "auth" service client given the endpoints.
func NewClient(callback, login, switchScopes, logout, register, info goa.Endpoint) *Client {
	return &Client{
		CallbackEndpoint:     callback,
		LoginEndpoint:        login,
		SwitchScopesEndpoint: switchScopes,
		LogoutEndpoint:       logout,
		RegisterEndpoint:     register,
		InfoEndpoint:         info,
	}
}

// Callback calls the "callback" endpoint of the "auth" service.
// Callback may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Callback(ctx context.Context, p *CallbackPayload) (res *CallbackResult, err error) {
	var ires any
	ires, err = c.CallbackEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CallbackResult), nil
}

// Login calls the "login" endpoint of the "auth" service.
// Login may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Login(ctx context.Context) (res *LoginResult, err error) {
	var ires any
	ires, err = c.LoginEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}

// SwitchScopes calls the "switchScopes" endpoint of the "auth" service.
// SwitchScopes may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) SwitchScopes(ctx context.Context, p *SwitchScopesPayload) (res *SwitchScopesResult, err error) {
	var ires any
	ires, err = c.SwitchScopesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SwitchScopesResult), nil
}

// Logout calls the "logout" endpoint of the "auth" service.
// Logout may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Logout(ctx context.Context, p *LogoutPayload) (res *LogoutResult, err error) {
	var ires any
	ires, err = c.LogoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LogoutResult), nil
}

// Register calls the "register" endpoint of the "auth" service.
// Register may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Register(ctx context.Context, p *RegisterPayload) (err error) {
	_, err = c.RegisterEndpoint(ctx, p)
	return
}

// Info calls the "info" endpoint of the "auth" service.
// Info may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Info(ctx context.Context, p *InfoPayload) (res *InfoResult, err error) {
	var ires any
	ires, err = c.InfoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*InfoResult), nil
}
