// Code generated by goa v3.22.2, DO NOT EDIT.
//
// usage client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package usage

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "usage" service client.
type Client struct {
	GetPeriodUsageEndpoint        goa.Endpoint
	GetUsageTiersEndpoint         goa.Endpoint
	CreateCustomerSessionEndpoint goa.Endpoint
	CreateCheckoutEndpoint        goa.Endpoint
}

// NewClient initializes a "usage" service client given the endpoints.
func NewClient(getPeriodUsage, getUsageTiers, createCustomerSession, createCheckout goa.Endpoint) *Client {
	return &Client{
		GetPeriodUsageEndpoint:        getPeriodUsage,
		GetUsageTiersEndpoint:         getUsageTiers,
		CreateCustomerSessionEndpoint: createCustomerSession,
		CreateCheckoutEndpoint:        createCheckout,
	}
}

// GetPeriodUsage calls the "getPeriodUsage" endpoint of the "usage" service.
// GetPeriodUsage may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) GetPeriodUsage(ctx context.Context, p *GetPeriodUsagePayload) (res *PeriodUsage, err error) {
	var ires any
	ires, err = c.GetPeriodUsageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PeriodUsage), nil
}

// GetUsageTiers calls the "getUsageTiers" endpoint of the "usage" service.
// GetUsageTiers may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) GetUsageTiers(ctx context.Context) (res *UsageTiers, err error) {
	var ires any
	ires, err = c.GetUsageTiersEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*UsageTiers), nil
}

// CreateCustomerSession calls the "createCustomerSession" endpoint of the
// "usage" service.
// CreateCustomerSession may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) CreateCustomerSession(ctx context.Context, p *CreateCustomerSessionPayload) (res string, err error) {
	var ires any
	ires, err = c.CreateCustomerSessionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// CreateCheckout calls the "createCheckout" endpoint of the "usage" service.
// CreateCheckout may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) CreateCheckout(ctx context.Context, p *CreateCheckoutPayload) (res string, err error) {
	var ires any
	ires, err = c.CreateCheckoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
