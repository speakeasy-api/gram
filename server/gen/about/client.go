// Code generated by goa v3.22.2, DO NOT EDIT.
//
// about client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/server/design

package about

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "about" service client.
type Client struct {
	OpenapiEndpoint goa.Endpoint
}

// NewClient initializes a "about" service client given the endpoints.
func NewClient(openapi goa.Endpoint) *Client {
	return &Client{
		OpenapiEndpoint: openapi,
	}
}

// Openapi calls the "openapi" endpoint of the "about" service.
// Openapi may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): unauthorized access
//   - "forbidden" (type *goa.ServiceError): permission denied
//   - "bad_request" (type *goa.ServiceError): request is invalid
//   - "not_found" (type *goa.ServiceError): resource not found
//   - "conflict" (type *goa.ServiceError): resource already exists
//   - "unsupported_media" (type *goa.ServiceError): unsupported media type
//   - "invalid" (type *goa.ServiceError): request contains one or more invalidation fields
//   - "invariant_violation" (type *goa.ServiceError): an unexpected error occurred
//   - "unexpected" (type *goa.ServiceError): an unexpected error occurred
//   - "gateway_error" (type *goa.ServiceError): an unexpected error occurred
//   - error: internal error
func (c *Client) Openapi(ctx context.Context) (res *OpenapiResult, resp io.ReadCloser, err error) {
	var ires any
	ires, err = c.OpenapiEndpoint(ctx, nil)
	if err != nil {
		return
	}
	o := ires.(*OpenapiResponseData)
	return o.Result, o.Body, nil
}
