/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mcpMetadataGet } from "../funcs/mcpMetadataGet.js";
import { mcpMetadataSet } from "../funcs/mcpMetadataSet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class McpMetadata extends ClientSDK {
  /**
   * getMcpMetadata mcpMetadata
   *
   * @remarks
   * Fetch the metadata that powers the MCP install page.
   */
  async get(
    request: operations.GetMcpMetadataRequest,
    security?: operations.GetMcpMetadataSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.GetMcpMetadataResponseBody> {
    return unwrapAsync(mcpMetadataGet(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * setMcpMetadata mcpMetadata
   *
   * @remarks
   * Create or update the metadata that powers the MCP install page.
   */
  async set(
    request: operations.SetMcpMetadataRequest,
    security?: operations.SetMcpMetadataSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.McpMetadata> {
    return unwrapAsync(mcpMetadataSet(
      this,
      request,
      security,
      options,
    ));
  }
}
