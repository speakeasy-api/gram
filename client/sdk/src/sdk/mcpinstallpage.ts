/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mcpInstallPageGet } from "../funcs/mcpInstallPageGet.js";
import { mcpInstallPageSet } from "../funcs/mcpInstallPageSet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class McpInstallPage extends ClientSDK {
  /**
   * getInstallPageMetadata mcpInstallPage
   *
   * @remarks
   * Fetch the metadata that powers the MCP install page.
   */
  async get(
    request: operations.GetInstallPageMetadataRequest,
    security?: operations.GetInstallPageMetadataSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.GetInstallPageMetadataResponseBody> {
    return unwrapAsync(mcpInstallPageGet(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * setInstallPageMetadata mcpInstallPage
   *
   * @remarks
   * Create or update the metadata that powers the MCP install page.
   */
  async set(
    request: operations.SetInstallPageMetadataRequest,
    security?: operations.SetInstallPageMetadataSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.MCPInstallPageMetadata> {
    return unwrapAsync(mcpInstallPageSet(
      this,
      request,
      security,
      options,
    ));
  }
}
