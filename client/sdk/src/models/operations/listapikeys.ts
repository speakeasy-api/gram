/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListAPIKeysSecurity = {
  sessionHeaderGramSession?: string | undefined;
};

export type ListAPIKeysRequest = {
  /**
   * Session header
   */
  gramSession?: string | undefined;
};

/** @internal */
export const ListAPIKeysSecurity$inboundSchema: z.ZodType<
  ListAPIKeysSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  "session_header_Gram-Session": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "session_header_Gram-Session": "sessionHeaderGramSession",
  });
});

/** @internal */
export type ListAPIKeysSecurity$Outbound = {
  "session_header_Gram-Session"?: string | undefined;
};

/** @internal */
export const ListAPIKeysSecurity$outboundSchema: z.ZodType<
  ListAPIKeysSecurity$Outbound,
  z.ZodTypeDef,
  ListAPIKeysSecurity
> = z.object({
  sessionHeaderGramSession: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    sessionHeaderGramSession: "session_header_Gram-Session",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAPIKeysSecurity$ {
  /** @deprecated use `ListAPIKeysSecurity$inboundSchema` instead. */
  export const inboundSchema = ListAPIKeysSecurity$inboundSchema;
  /** @deprecated use `ListAPIKeysSecurity$outboundSchema` instead. */
  export const outboundSchema = ListAPIKeysSecurity$outboundSchema;
  /** @deprecated use `ListAPIKeysSecurity$Outbound` instead. */
  export type Outbound = ListAPIKeysSecurity$Outbound;
}

export function listAPIKeysSecurityToJSON(
  listAPIKeysSecurity: ListAPIKeysSecurity,
): string {
  return JSON.stringify(
    ListAPIKeysSecurity$outboundSchema.parse(listAPIKeysSecurity),
  );
}

export function listAPIKeysSecurityFromJSON(
  jsonString: string,
): SafeParseResult<ListAPIKeysSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAPIKeysSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAPIKeysSecurity' from JSON`,
  );
}

/** @internal */
export const ListAPIKeysRequest$inboundSchema: z.ZodType<
  ListAPIKeysRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Gram-Session": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "Gram-Session": "gramSession",
  });
});

/** @internal */
export type ListAPIKeysRequest$Outbound = {
  "Gram-Session"?: string | undefined;
};

/** @internal */
export const ListAPIKeysRequest$outboundSchema: z.ZodType<
  ListAPIKeysRequest$Outbound,
  z.ZodTypeDef,
  ListAPIKeysRequest
> = z.object({
  gramSession: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    gramSession: "Gram-Session",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAPIKeysRequest$ {
  /** @deprecated use `ListAPIKeysRequest$inboundSchema` instead. */
  export const inboundSchema = ListAPIKeysRequest$inboundSchema;
  /** @deprecated use `ListAPIKeysRequest$outboundSchema` instead. */
  export const outboundSchema = ListAPIKeysRequest$outboundSchema;
  /** @deprecated use `ListAPIKeysRequest$Outbound` instead. */
  export type Outbound = ListAPIKeysRequest$Outbound;
}

export function listAPIKeysRequestToJSON(
  listAPIKeysRequest: ListAPIKeysRequest,
): string {
  return JSON.stringify(
    ListAPIKeysRequest$outboundSchema.parse(listAPIKeysRequest),
  );
}

export function listAPIKeysRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListAPIKeysRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAPIKeysRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAPIKeysRequest' from JSON`,
  );
}
