/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateSlackConnectionSecurity = {
  projectSlugHeaderGramProject?: string | undefined;
  sessionHeaderGramSession?: string | undefined;
};

export type UpdateSlackConnectionRequest = {
  /**
   * Session header
   */
  gramSession?: string | undefined;
  /**
   * project header
   */
  gramProject?: string | undefined;
  updateSlackConnectionRequestBody: components.UpdateSlackConnectionRequestBody;
};

/** @internal */
export const UpdateSlackConnectionSecurity$inboundSchema: z.ZodType<
  UpdateSlackConnectionSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  "project_slug_header_Gram-Project": z.string().optional(),
  "session_header_Gram-Session": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "project_slug_header_Gram-Project": "projectSlugHeaderGramProject",
    "session_header_Gram-Session": "sessionHeaderGramSession",
  });
});

/** @internal */
export type UpdateSlackConnectionSecurity$Outbound = {
  "project_slug_header_Gram-Project"?: string | undefined;
  "session_header_Gram-Session"?: string | undefined;
};

/** @internal */
export const UpdateSlackConnectionSecurity$outboundSchema: z.ZodType<
  UpdateSlackConnectionSecurity$Outbound,
  z.ZodTypeDef,
  UpdateSlackConnectionSecurity
> = z.object({
  projectSlugHeaderGramProject: z.string().optional(),
  sessionHeaderGramSession: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    projectSlugHeaderGramProject: "project_slug_header_Gram-Project",
    sessionHeaderGramSession: "session_header_Gram-Session",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSlackConnectionSecurity$ {
  /** @deprecated use `UpdateSlackConnectionSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateSlackConnectionSecurity$inboundSchema;
  /** @deprecated use `UpdateSlackConnectionSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateSlackConnectionSecurity$outboundSchema;
  /** @deprecated use `UpdateSlackConnectionSecurity$Outbound` instead. */
  export type Outbound = UpdateSlackConnectionSecurity$Outbound;
}

export function updateSlackConnectionSecurityToJSON(
  updateSlackConnectionSecurity: UpdateSlackConnectionSecurity,
): string {
  return JSON.stringify(
    UpdateSlackConnectionSecurity$outboundSchema.parse(
      updateSlackConnectionSecurity,
    ),
  );
}

export function updateSlackConnectionSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSlackConnectionSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSlackConnectionSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSlackConnectionSecurity' from JSON`,
  );
}

/** @internal */
export const UpdateSlackConnectionRequest$inboundSchema: z.ZodType<
  UpdateSlackConnectionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Gram-Session": z.string().optional(),
  "Gram-Project": z.string().optional(),
  UpdateSlackConnectionRequestBody:
    components.UpdateSlackConnectionRequestBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Gram-Session": "gramSession",
    "Gram-Project": "gramProject",
    "UpdateSlackConnectionRequestBody": "updateSlackConnectionRequestBody",
  });
});

/** @internal */
export type UpdateSlackConnectionRequest$Outbound = {
  "Gram-Session"?: string | undefined;
  "Gram-Project"?: string | undefined;
  UpdateSlackConnectionRequestBody:
    components.UpdateSlackConnectionRequestBody$Outbound;
};

/** @internal */
export const UpdateSlackConnectionRequest$outboundSchema: z.ZodType<
  UpdateSlackConnectionRequest$Outbound,
  z.ZodTypeDef,
  UpdateSlackConnectionRequest
> = z.object({
  gramSession: z.string().optional(),
  gramProject: z.string().optional(),
  updateSlackConnectionRequestBody:
    components.UpdateSlackConnectionRequestBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    gramSession: "Gram-Session",
    gramProject: "Gram-Project",
    updateSlackConnectionRequestBody: "UpdateSlackConnectionRequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSlackConnectionRequest$ {
  /** @deprecated use `UpdateSlackConnectionRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSlackConnectionRequest$inboundSchema;
  /** @deprecated use `UpdateSlackConnectionRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSlackConnectionRequest$outboundSchema;
  /** @deprecated use `UpdateSlackConnectionRequest$Outbound` instead. */
  export type Outbound = UpdateSlackConnectionRequest$Outbound;
}

export function updateSlackConnectionRequestToJSON(
  updateSlackConnectionRequest: UpdateSlackConnectionRequest,
): string {
  return JSON.stringify(
    UpdateSlackConnectionRequest$outboundSchema.parse(
      updateSlackConnectionRequest,
    ),
  );
}

export function updateSlackConnectionRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSlackConnectionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSlackConnectionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSlackConnectionRequest' from JSON`,
  );
}
