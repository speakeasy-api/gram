/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatOverview,
  ChatOverview$inboundSchema,
  ChatOverview$Outbound,
  ChatOverview$outboundSchema,
} from "./chatoverview.js";

export type ListChatsResult = {
  /**
   * The list of chats
   */
  chats: Array<ChatOverview>;
};

/** @internal */
export const ListChatsResult$inboundSchema: z.ZodType<
  ListChatsResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  chats: z.array(ChatOverview$inboundSchema),
});

/** @internal */
export type ListChatsResult$Outbound = {
  chats: Array<ChatOverview$Outbound>;
};

/** @internal */
export const ListChatsResult$outboundSchema: z.ZodType<
  ListChatsResult$Outbound,
  z.ZodTypeDef,
  ListChatsResult
> = z.object({
  chats: z.array(ChatOverview$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChatsResult$ {
  /** @deprecated use `ListChatsResult$inboundSchema` instead. */
  export const inboundSchema = ListChatsResult$inboundSchema;
  /** @deprecated use `ListChatsResult$outboundSchema` instead. */
  export const outboundSchema = ListChatsResult$outboundSchema;
  /** @deprecated use `ListChatsResult$Outbound` instead. */
  export type Outbound = ListChatsResult$Outbound;
}

export function listChatsResultToJSON(
  listChatsResult: ListChatsResult,
): string {
  return JSON.stringify(ListChatsResult$outboundSchema.parse(listChatsResult));
}

export function listChatsResultFromJSON(
  jsonString: string,
): SafeParseResult<ListChatsResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListChatsResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListChatsResult' from JSON`,
  );
}
