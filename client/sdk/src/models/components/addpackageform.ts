/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddPackageForm = {
  /**
   * The name of the package to add.
   */
  name: string;
  /**
   * The version of the package to add. If omitted, the latest version will be used.
   */
  version?: string | undefined;
};

/** @internal */
export const AddPackageForm$inboundSchema: z.ZodType<
  AddPackageForm,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  version: z.string().optional(),
});

/** @internal */
export type AddPackageForm$Outbound = {
  name: string;
  version?: string | undefined;
};

/** @internal */
export const AddPackageForm$outboundSchema: z.ZodType<
  AddPackageForm$Outbound,
  z.ZodTypeDef,
  AddPackageForm
> = z.object({
  name: z.string(),
  version: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPackageForm$ {
  /** @deprecated use `AddPackageForm$inboundSchema` instead. */
  export const inboundSchema = AddPackageForm$inboundSchema;
  /** @deprecated use `AddPackageForm$outboundSchema` instead. */
  export const outboundSchema = AddPackageForm$outboundSchema;
  /** @deprecated use `AddPackageForm$Outbound` instead. */
  export type Outbound = AddPackageForm$Outbound;
}

export function addPackageFormToJSON(addPackageForm: AddPackageForm): string {
  return JSON.stringify(AddPackageForm$outboundSchema.parse(addPackageForm));
}

export function addPackageFormFromJSON(
  jsonString: string,
): SafeParseResult<AddPackageForm, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddPackageForm$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddPackageForm' from JSON`,
  );
}
