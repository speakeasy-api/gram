/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Package,
  Package$inboundSchema,
  Package$Outbound,
  Package$outboundSchema,
} from "./package.js";

export type CreatePackageResult = {
  package: Package;
};

/** @internal */
export const CreatePackageResult$inboundSchema: z.ZodType<
  CreatePackageResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  package: Package$inboundSchema,
});

/** @internal */
export type CreatePackageResult$Outbound = {
  package: Package$Outbound;
};

/** @internal */
export const CreatePackageResult$outboundSchema: z.ZodType<
  CreatePackageResult$Outbound,
  z.ZodTypeDef,
  CreatePackageResult
> = z.object({
  package: Package$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePackageResult$ {
  /** @deprecated use `CreatePackageResult$inboundSchema` instead. */
  export const inboundSchema = CreatePackageResult$inboundSchema;
  /** @deprecated use `CreatePackageResult$outboundSchema` instead. */
  export const outboundSchema = CreatePackageResult$outboundSchema;
  /** @deprecated use `CreatePackageResult$Outbound` instead. */
  export type Outbound = CreatePackageResult$Outbound;
}

export function createPackageResultToJSON(
  createPackageResult: CreatePackageResult,
): string {
  return JSON.stringify(
    CreatePackageResult$outboundSchema.parse(createPackageResult),
  );
}

export function createPackageResultFromJSON(
  jsonString: string,
): SafeParseResult<CreatePackageResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePackageResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePackageResult' from JSON`,
  );
}
