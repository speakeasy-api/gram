/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatOverview = {
  /**
   * When the chat was created.
   */
  createdAt: Date;
  /**
   * The ID of the chat
   */
  id: string;
  /**
   * The number of messages in the chat
   */
  numMessages: number;
  /**
   * The title of the chat
   */
  title: string;
  /**
   * When the chat was last updated.
   */
  updatedAt: Date;
  /**
   * The ID of the user who created the chat
   */
  userId: string;
};

/** @internal */
export const ChatOverview$inboundSchema: z.ZodType<
  ChatOverview,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  id: z.string(),
  num_messages: z.number().int(),
  title: z.string(),
  updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  user_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "num_messages": "numMessages",
    "updated_at": "updatedAt",
    "user_id": "userId",
  });
});

/** @internal */
export type ChatOverview$Outbound = {
  created_at: string;
  id: string;
  num_messages: number;
  title: string;
  updated_at: string;
  user_id: string;
};

/** @internal */
export const ChatOverview$outboundSchema: z.ZodType<
  ChatOverview$Outbound,
  z.ZodTypeDef,
  ChatOverview
> = z.object({
  createdAt: z.date().transform(v => v.toISOString()),
  id: z.string(),
  numMessages: z.number().int(),
  title: z.string(),
  updatedAt: z.date().transform(v => v.toISOString()),
  userId: z.string(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    numMessages: "num_messages",
    updatedAt: "updated_at",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatOverview$ {
  /** @deprecated use `ChatOverview$inboundSchema` instead. */
  export const inboundSchema = ChatOverview$inboundSchema;
  /** @deprecated use `ChatOverview$outboundSchema` instead. */
  export const outboundSchema = ChatOverview$outboundSchema;
  /** @deprecated use `ChatOverview$Outbound` instead. */
  export type Outbound = ChatOverview$Outbound;
}

export function chatOverviewToJSON(chatOverview: ChatOverview): string {
  return JSON.stringify(ChatOverview$outboundSchema.parse(chatOverview));
}

export function chatOverviewFromJSON(
  jsonString: string,
): SafeParseResult<ChatOverview, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatOverview$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatOverview' from JSON`,
  );
}
