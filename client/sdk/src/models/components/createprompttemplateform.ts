/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The template engine
 */
export const CreatePromptTemplateFormEngine = {
  Mustache: "mustache",
} as const;
/**
 * The template engine
 */
export type CreatePromptTemplateFormEngine = ClosedEnum<
  typeof CreatePromptTemplateFormEngine
>;

/**
 * The kind of prompt the template is used for
 */
export const CreatePromptTemplateFormKind = {
  Prompt: "prompt",
  HigherOrderTool: "higher_order_tool",
} as const;
/**
 * The kind of prompt the template is used for
 */
export type CreatePromptTemplateFormKind = ClosedEnum<
  typeof CreatePromptTemplateFormKind
>;

export type CreatePromptTemplateForm = {
  /**
   * The JSON Schema defining the placeholders found in the prompt template
   */
  arguments?: string | undefined;
  /**
   * The description of the prompt template
   */
  description?: string | undefined;
  /**
   * The template engine
   */
  engine: CreatePromptTemplateFormEngine;
  /**
   * The kind of prompt the template is used for
   */
  kind: CreatePromptTemplateFormKind;
  /**
   * A short url-friendly label that uniquely identifies a resource.
   */
  name: string;
  /**
   * The template content
   */
  prompt: string;
  /**
   * The suggested tool URNS associated with the prompt template
   */
  toolUrnsHint?: Array<string> | undefined;
  /**
   * The suggested tool names associated with the prompt template
   */
  toolsHint?: Array<string> | undefined;
};

/** @internal */
export const CreatePromptTemplateFormEngine$inboundSchema: z.ZodNativeEnum<
  typeof CreatePromptTemplateFormEngine
> = z.nativeEnum(CreatePromptTemplateFormEngine);

/** @internal */
export const CreatePromptTemplateFormEngine$outboundSchema: z.ZodNativeEnum<
  typeof CreatePromptTemplateFormEngine
> = CreatePromptTemplateFormEngine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePromptTemplateFormEngine$ {
  /** @deprecated use `CreatePromptTemplateFormEngine$inboundSchema` instead. */
  export const inboundSchema = CreatePromptTemplateFormEngine$inboundSchema;
  /** @deprecated use `CreatePromptTemplateFormEngine$outboundSchema` instead. */
  export const outboundSchema = CreatePromptTemplateFormEngine$outboundSchema;
}

/** @internal */
export const CreatePromptTemplateFormKind$inboundSchema: z.ZodNativeEnum<
  typeof CreatePromptTemplateFormKind
> = z.nativeEnum(CreatePromptTemplateFormKind);

/** @internal */
export const CreatePromptTemplateFormKind$outboundSchema: z.ZodNativeEnum<
  typeof CreatePromptTemplateFormKind
> = CreatePromptTemplateFormKind$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePromptTemplateFormKind$ {
  /** @deprecated use `CreatePromptTemplateFormKind$inboundSchema` instead. */
  export const inboundSchema = CreatePromptTemplateFormKind$inboundSchema;
  /** @deprecated use `CreatePromptTemplateFormKind$outboundSchema` instead. */
  export const outboundSchema = CreatePromptTemplateFormKind$outboundSchema;
}

/** @internal */
export const CreatePromptTemplateForm$inboundSchema: z.ZodType<
  CreatePromptTemplateForm,
  z.ZodTypeDef,
  unknown
> = z.object({
  arguments: z.string().optional(),
  description: z.string().optional(),
  engine: CreatePromptTemplateFormEngine$inboundSchema,
  kind: CreatePromptTemplateFormKind$inboundSchema,
  name: z.string(),
  prompt: z.string(),
  tool_urns_hint: z.array(z.string()).optional(),
  tools_hint: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_urns_hint": "toolUrnsHint",
    "tools_hint": "toolsHint",
  });
});

/** @internal */
export type CreatePromptTemplateForm$Outbound = {
  arguments?: string | undefined;
  description?: string | undefined;
  engine: string;
  kind: string;
  name: string;
  prompt: string;
  tool_urns_hint?: Array<string> | undefined;
  tools_hint?: Array<string> | undefined;
};

/** @internal */
export const CreatePromptTemplateForm$outboundSchema: z.ZodType<
  CreatePromptTemplateForm$Outbound,
  z.ZodTypeDef,
  CreatePromptTemplateForm
> = z.object({
  arguments: z.string().optional(),
  description: z.string().optional(),
  engine: CreatePromptTemplateFormEngine$outboundSchema,
  kind: CreatePromptTemplateFormKind$outboundSchema,
  name: z.string(),
  prompt: z.string(),
  toolUrnsHint: z.array(z.string()).optional(),
  toolsHint: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    toolUrnsHint: "tool_urns_hint",
    toolsHint: "tools_hint",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePromptTemplateForm$ {
  /** @deprecated use `CreatePromptTemplateForm$inboundSchema` instead. */
  export const inboundSchema = CreatePromptTemplateForm$inboundSchema;
  /** @deprecated use `CreatePromptTemplateForm$outboundSchema` instead. */
  export const outboundSchema = CreatePromptTemplateForm$outboundSchema;
  /** @deprecated use `CreatePromptTemplateForm$Outbound` instead. */
  export type Outbound = CreatePromptTemplateForm$Outbound;
}

export function createPromptTemplateFormToJSON(
  createPromptTemplateForm: CreatePromptTemplateForm,
): string {
  return JSON.stringify(
    CreatePromptTemplateForm$outboundSchema.parse(createPromptTemplateForm),
  );
}

export function createPromptTemplateFormFromJSON(
  jsonString: string,
): SafeParseResult<CreatePromptTemplateForm, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePromptTemplateForm$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePromptTemplateForm' from JSON`,
  );
}
