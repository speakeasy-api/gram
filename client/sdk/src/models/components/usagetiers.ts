/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TierLimits,
  TierLimits$inboundSchema,
  TierLimits$Outbound,
  TierLimits$outboundSchema,
} from "./tierlimits.js";

export type UsageTiers = {
  enterprise: TierLimits;
  free: TierLimits;
  pro: TierLimits;
};

/** @internal */
export const UsageTiers$inboundSchema: z.ZodType<
  UsageTiers,
  z.ZodTypeDef,
  unknown
> = z.object({
  enterprise: TierLimits$inboundSchema,
  free: TierLimits$inboundSchema,
  pro: TierLimits$inboundSchema,
});

/** @internal */
export type UsageTiers$Outbound = {
  enterprise: TierLimits$Outbound;
  free: TierLimits$Outbound;
  pro: TierLimits$Outbound;
};

/** @internal */
export const UsageTiers$outboundSchema: z.ZodType<
  UsageTiers$Outbound,
  z.ZodTypeDef,
  UsageTiers
> = z.object({
  enterprise: TierLimits$outboundSchema,
  free: TierLimits$outboundSchema,
  pro: TierLimits$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsageTiers$ {
  /** @deprecated use `UsageTiers$inboundSchema` instead. */
  export const inboundSchema = UsageTiers$inboundSchema;
  /** @deprecated use `UsageTiers$outboundSchema` instead. */
  export const outboundSchema = UsageTiers$outboundSchema;
  /** @deprecated use `UsageTiers$Outbound` instead. */
  export type Outbound = UsageTiers$Outbound;
}

export function usageTiersToJSON(usageTiers: UsageTiers): string {
  return JSON.stringify(UsageTiers$outboundSchema.parse(usageTiers));
}

export function usageTiersFromJSON(
  jsonString: string,
): SafeParseResult<UsageTiers, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UsageTiers$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UsageTiers' from JSON`,
  );
}
