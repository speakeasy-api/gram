/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Project,
  Project$inboundSchema,
  Project$Outbound,
  Project$outboundSchema,
} from "./project.js";

export type SetProjectLogoResult = {
  project: Project;
};

/** @internal */
export const SetProjectLogoResult$inboundSchema: z.ZodType<
  SetProjectLogoResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  project: Project$inboundSchema,
});

/** @internal */
export type SetProjectLogoResult$Outbound = {
  project: Project$Outbound;
};

/** @internal */
export const SetProjectLogoResult$outboundSchema: z.ZodType<
  SetProjectLogoResult$Outbound,
  z.ZodTypeDef,
  SetProjectLogoResult
> = z.object({
  project: Project$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetProjectLogoResult$ {
  /** @deprecated use `SetProjectLogoResult$inboundSchema` instead. */
  export const inboundSchema = SetProjectLogoResult$inboundSchema;
  /** @deprecated use `SetProjectLogoResult$outboundSchema` instead. */
  export const outboundSchema = SetProjectLogoResult$outboundSchema;
  /** @deprecated use `SetProjectLogoResult$Outbound` instead. */
  export type Outbound = SetProjectLogoResult$Outbound;
}

export function setProjectLogoResultToJSON(
  setProjectLogoResult: SetProjectLogoResult,
): string {
  return JSON.stringify(
    SetProjectLogoResult$outboundSchema.parse(setProjectLogoResult),
  );
}

export function setProjectLogoResultFromJSON(
  jsonString: string,
): SafeParseResult<SetProjectLogoResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetProjectLogoResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetProjectLogoResult' from JSON`,
  );
}
