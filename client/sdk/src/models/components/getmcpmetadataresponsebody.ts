/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  McpMetadata,
  McpMetadata$inboundSchema,
  McpMetadata$Outbound,
  McpMetadata$outboundSchema,
} from "./mcpmetadata.js";

export type GetMcpMetadataResponseBody = {
  /**
   * Metadata used to configure the MCP install page.
   */
  metadata?: McpMetadata | undefined;
};

/** @internal */
export const GetMcpMetadataResponseBody$inboundSchema: z.ZodType<
  GetMcpMetadataResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: McpMetadata$inboundSchema.optional(),
});

/** @internal */
export type GetMcpMetadataResponseBody$Outbound = {
  metadata?: McpMetadata$Outbound | undefined;
};

/** @internal */
export const GetMcpMetadataResponseBody$outboundSchema: z.ZodType<
  GetMcpMetadataResponseBody$Outbound,
  z.ZodTypeDef,
  GetMcpMetadataResponseBody
> = z.object({
  metadata: McpMetadata$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMcpMetadataResponseBody$ {
  /** @deprecated use `GetMcpMetadataResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetMcpMetadataResponseBody$inboundSchema;
  /** @deprecated use `GetMcpMetadataResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetMcpMetadataResponseBody$outboundSchema;
  /** @deprecated use `GetMcpMetadataResponseBody$Outbound` instead. */
  export type Outbound = GetMcpMetadataResponseBody$Outbound;
}

export function getMcpMetadataResponseBodyToJSON(
  getMcpMetadataResponseBody: GetMcpMetadataResponseBody,
): string {
  return JSON.stringify(
    GetMcpMetadataResponseBody$outboundSchema.parse(getMcpMetadataResponseBody),
  );
}

export function getMcpMetadataResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetMcpMetadataResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMcpMetadataResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMcpMetadataResponseBody' from JSON`,
  );
}
