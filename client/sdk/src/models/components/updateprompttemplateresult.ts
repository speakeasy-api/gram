/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PromptTemplate,
  PromptTemplate$inboundSchema,
  PromptTemplate$Outbound,
  PromptTemplate$outboundSchema,
} from "./prompttemplate.js";

export type UpdatePromptTemplateResult = {
  /**
   * A prompt template
   */
  template: PromptTemplate;
};

/** @internal */
export const UpdatePromptTemplateResult$inboundSchema: z.ZodType<
  UpdatePromptTemplateResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  template: PromptTemplate$inboundSchema,
});

/** @internal */
export type UpdatePromptTemplateResult$Outbound = {
  template: PromptTemplate$Outbound;
};

/** @internal */
export const UpdatePromptTemplateResult$outboundSchema: z.ZodType<
  UpdatePromptTemplateResult$Outbound,
  z.ZodTypeDef,
  UpdatePromptTemplateResult
> = z.object({
  template: PromptTemplate$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptTemplateResult$ {
  /** @deprecated use `UpdatePromptTemplateResult$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptTemplateResult$inboundSchema;
  /** @deprecated use `UpdatePromptTemplateResult$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptTemplateResult$outboundSchema;
  /** @deprecated use `UpdatePromptTemplateResult$Outbound` instead. */
  export type Outbound = UpdatePromptTemplateResult$Outbound;
}

export function updatePromptTemplateResultToJSON(
  updatePromptTemplateResult: UpdatePromptTemplateResult,
): string {
  return JSON.stringify(
    UpdatePromptTemplateResult$outboundSchema.parse(updatePromptTemplateResult),
  );
}

export function updatePromptTemplateResultFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptTemplateResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptTemplateResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptTemplateResult' from JSON`,
  );
}
