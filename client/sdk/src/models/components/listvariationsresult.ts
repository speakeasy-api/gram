/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ToolVariation,
  ToolVariation$inboundSchema,
  ToolVariation$Outbound,
  ToolVariation$outboundSchema,
} from "./toolvariation.js";

export type ListVariationsResult = {
  variations: Array<ToolVariation>;
};

/** @internal */
export const ListVariationsResult$inboundSchema: z.ZodType<
  ListVariationsResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  variations: z.array(ToolVariation$inboundSchema),
});

/** @internal */
export type ListVariationsResult$Outbound = {
  variations: Array<ToolVariation$Outbound>;
};

/** @internal */
export const ListVariationsResult$outboundSchema: z.ZodType<
  ListVariationsResult$Outbound,
  z.ZodTypeDef,
  ListVariationsResult
> = z.object({
  variations: z.array(ToolVariation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListVariationsResult$ {
  /** @deprecated use `ListVariationsResult$inboundSchema` instead. */
  export const inboundSchema = ListVariationsResult$inboundSchema;
  /** @deprecated use `ListVariationsResult$outboundSchema` instead. */
  export const outboundSchema = ListVariationsResult$outboundSchema;
  /** @deprecated use `ListVariationsResult$Outbound` instead. */
  export type Outbound = ListVariationsResult$Outbound;
}

export function listVariationsResultToJSON(
  listVariationsResult: ListVariationsResult,
): string {
  return JSON.stringify(
    ListVariationsResult$outboundSchema.parse(listVariationsResult),
  );
}

export function listVariationsResultFromJSON(
  jsonString: string,
): SafeParseResult<ListVariationsResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListVariationsResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListVariationsResult' from JSON`,
  );
}
