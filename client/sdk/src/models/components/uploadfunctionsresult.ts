/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Asset,
  Asset$inboundSchema,
  Asset$Outbound,
  Asset$outboundSchema,
} from "./asset.js";

export type UploadFunctionsResult = {
  asset: Asset;
};

/** @internal */
export const UploadFunctionsResult$inboundSchema: z.ZodType<
  UploadFunctionsResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset: Asset$inboundSchema,
});

/** @internal */
export type UploadFunctionsResult$Outbound = {
  asset: Asset$Outbound;
};

/** @internal */
export const UploadFunctionsResult$outboundSchema: z.ZodType<
  UploadFunctionsResult$Outbound,
  z.ZodTypeDef,
  UploadFunctionsResult
> = z.object({
  asset: Asset$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadFunctionsResult$ {
  /** @deprecated use `UploadFunctionsResult$inboundSchema` instead. */
  export const inboundSchema = UploadFunctionsResult$inboundSchema;
  /** @deprecated use `UploadFunctionsResult$outboundSchema` instead. */
  export const outboundSchema = UploadFunctionsResult$outboundSchema;
  /** @deprecated use `UploadFunctionsResult$Outbound` instead. */
  export type Outbound = UploadFunctionsResult$Outbound;
}

export function uploadFunctionsResultToJSON(
  uploadFunctionsResult: UploadFunctionsResult,
): string {
  return JSON.stringify(
    UploadFunctionsResult$outboundSchema.parse(uploadFunctionsResult),
  );
}

export function uploadFunctionsResultFromJSON(
  jsonString: string,
): SafeParseResult<UploadFunctionsResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UploadFunctionsResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UploadFunctionsResult' from JSON`,
  );
}
