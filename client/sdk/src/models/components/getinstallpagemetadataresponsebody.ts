/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MCPInstallPageMetadata,
  MCPInstallPageMetadata$inboundSchema,
  MCPInstallPageMetadata$Outbound,
  MCPInstallPageMetadata$outboundSchema,
} from "./mcpinstallpagemetadata.js";

export type GetInstallPageMetadataResponseBody = {
  /**
   * Metadata used to configure the MCP install page.
   */
  metadata?: MCPInstallPageMetadata | undefined;
};

/** @internal */
export const GetInstallPageMetadataResponseBody$inboundSchema: z.ZodType<
  GetInstallPageMetadataResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: MCPInstallPageMetadata$inboundSchema.optional(),
});

/** @internal */
export type GetInstallPageMetadataResponseBody$Outbound = {
  metadata?: MCPInstallPageMetadata$Outbound | undefined;
};

/** @internal */
export const GetInstallPageMetadataResponseBody$outboundSchema: z.ZodType<
  GetInstallPageMetadataResponseBody$Outbound,
  z.ZodTypeDef,
  GetInstallPageMetadataResponseBody
> = z.object({
  metadata: MCPInstallPageMetadata$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInstallPageMetadataResponseBody$ {
  /** @deprecated use `GetInstallPageMetadataResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetInstallPageMetadataResponseBody$inboundSchema;
  /** @deprecated use `GetInstallPageMetadataResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetInstallPageMetadataResponseBody$outboundSchema;
  /** @deprecated use `GetInstallPageMetadataResponseBody$Outbound` instead. */
  export type Outbound = GetInstallPageMetadataResponseBody$Outbound;
}

export function getInstallPageMetadataResponseBodyToJSON(
  getInstallPageMetadataResponseBody: GetInstallPageMetadataResponseBody,
): string {
  return JSON.stringify(
    GetInstallPageMetadataResponseBody$outboundSchema.parse(
      getInstallPageMetadataResponseBody,
    ),
  );
}

export function getInstallPageMetadataResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetInstallPageMetadataResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetInstallPageMetadataResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInstallPageMetadataResponseBody' from JSON`,
  );
}
