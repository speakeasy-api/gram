/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * A single environment entry
 */
export type EnvironmentEntryInput = {
  /**
   * The name of the environment variable
   */
  name: string;
  /**
   * The value of the environment variable
   */
  value: string;
};

/** @internal */
export const EnvironmentEntryInput$inboundSchema: z.ZodType<
  EnvironmentEntryInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  value: z.string(),
});

/** @internal */
export type EnvironmentEntryInput$Outbound = {
  name: string;
  value: string;
};

/** @internal */
export const EnvironmentEntryInput$outboundSchema: z.ZodType<
  EnvironmentEntryInput$Outbound,
  z.ZodTypeDef,
  EnvironmentEntryInput
> = z.object({
  name: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnvironmentEntryInput$ {
  /** @deprecated use `EnvironmentEntryInput$inboundSchema` instead. */
  export const inboundSchema = EnvironmentEntryInput$inboundSchema;
  /** @deprecated use `EnvironmentEntryInput$outboundSchema` instead. */
  export const outboundSchema = EnvironmentEntryInput$outboundSchema;
  /** @deprecated use `EnvironmentEntryInput$Outbound` instead. */
  export type Outbound = EnvironmentEntryInput$Outbound;
}

export function environmentEntryInputToJSON(
  environmentEntryInput: EnvironmentEntryInput,
): string {
  return JSON.stringify(
    EnvironmentEntryInput$outboundSchema.parse(environmentEntryInput),
  );
}

export function environmentEntryInputFromJSON(
  jsonString: string,
): SafeParseResult<EnvironmentEntryInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnvironmentEntryInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnvironmentEntryInput' from JSON`,
  );
}
