/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Asset,
  Asset$inboundSchema,
  Asset$Outbound,
  Asset$outboundSchema,
} from "./asset.js";

export type UploadImageResult = {
  asset: Asset;
};

/** @internal */
export const UploadImageResult$inboundSchema: z.ZodType<
  UploadImageResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset: Asset$inboundSchema,
});

/** @internal */
export type UploadImageResult$Outbound = {
  asset: Asset$Outbound;
};

/** @internal */
export const UploadImageResult$outboundSchema: z.ZodType<
  UploadImageResult$Outbound,
  z.ZodTypeDef,
  UploadImageResult
> = z.object({
  asset: Asset$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadImageResult$ {
  /** @deprecated use `UploadImageResult$inboundSchema` instead. */
  export const inboundSchema = UploadImageResult$inboundSchema;
  /** @deprecated use `UploadImageResult$outboundSchema` instead. */
  export const outboundSchema = UploadImageResult$outboundSchema;
  /** @deprecated use `UploadImageResult$Outbound` instead. */
  export type Outbound = UploadImageResult$Outbound;
}

export function uploadImageResultToJSON(
  uploadImageResult: UploadImageResult,
): string {
  return JSON.stringify(
    UploadImageResult$outboundSchema.parse(uploadImageResult),
  );
}

export function uploadImageResultFromJSON(
  jsonString: string,
): SafeParseResult<UploadImageResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UploadImageResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UploadImageResult' from JSON`,
  );
}
