/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PromptTemplate,
  PromptTemplate$inboundSchema,
  PromptTemplate$Outbound,
  PromptTemplate$outboundSchema,
} from "./prompttemplate.js";

export type ListPromptTemplatesResult = {
  /**
   * The created prompt template
   */
  templates: Array<PromptTemplate>;
};

/** @internal */
export const ListPromptTemplatesResult$inboundSchema: z.ZodType<
  ListPromptTemplatesResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  templates: z.array(PromptTemplate$inboundSchema),
});

/** @internal */
export type ListPromptTemplatesResult$Outbound = {
  templates: Array<PromptTemplate$Outbound>;
};

/** @internal */
export const ListPromptTemplatesResult$outboundSchema: z.ZodType<
  ListPromptTemplatesResult$Outbound,
  z.ZodTypeDef,
  ListPromptTemplatesResult
> = z.object({
  templates: z.array(PromptTemplate$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPromptTemplatesResult$ {
  /** @deprecated use `ListPromptTemplatesResult$inboundSchema` instead. */
  export const inboundSchema = ListPromptTemplatesResult$inboundSchema;
  /** @deprecated use `ListPromptTemplatesResult$outboundSchema` instead. */
  export const outboundSchema = ListPromptTemplatesResult$outboundSchema;
  /** @deprecated use `ListPromptTemplatesResult$Outbound` instead. */
  export type Outbound = ListPromptTemplatesResult$Outbound;
}

export function listPromptTemplatesResultToJSON(
  listPromptTemplatesResult: ListPromptTemplatesResult,
): string {
  return JSON.stringify(
    ListPromptTemplatesResult$outboundSchema.parse(listPromptTemplatesResult),
  );
}

export function listPromptTemplatesResultFromJSON(
  jsonString: string,
): SafeParseResult<ListPromptTemplatesResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListPromptTemplatesResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPromptTemplatesResult' from JSON`,
  );
}
