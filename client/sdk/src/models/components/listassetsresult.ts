/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Asset,
  Asset$inboundSchema,
  Asset$Outbound,
  Asset$outboundSchema,
} from "./asset.js";

export type ListAssetsResult = {
  /**
   * The list of assets
   */
  assets: Array<Asset>;
};

/** @internal */
export const ListAssetsResult$inboundSchema: z.ZodType<
  ListAssetsResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  assets: z.array(Asset$inboundSchema),
});

/** @internal */
export type ListAssetsResult$Outbound = {
  assets: Array<Asset$Outbound>;
};

/** @internal */
export const ListAssetsResult$outboundSchema: z.ZodType<
  ListAssetsResult$Outbound,
  z.ZodTypeDef,
  ListAssetsResult
> = z.object({
  assets: z.array(Asset$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAssetsResult$ {
  /** @deprecated use `ListAssetsResult$inboundSchema` instead. */
  export const inboundSchema = ListAssetsResult$inboundSchema;
  /** @deprecated use `ListAssetsResult$outboundSchema` instead. */
  export const outboundSchema = ListAssetsResult$outboundSchema;
  /** @deprecated use `ListAssetsResult$Outbound` instead. */
  export type Outbound = ListAssetsResult$Outbound;
}

export function listAssetsResultToJSON(
  listAssetsResult: ListAssetsResult,
): string {
  return JSON.stringify(
    ListAssetsResult$outboundSchema.parse(listAssetsResult),
  );
}

export function listAssetsResultFromJSON(
  jsonString: string,
): SafeParseResult<ListAssetsResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAssetsResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAssetsResult' from JSON`,
  );
}
