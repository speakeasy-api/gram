/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PromptTemplate,
  PromptTemplate$inboundSchema,
  PromptTemplate$Outbound,
  PromptTemplate$outboundSchema,
} from "./prompttemplate.js";

export type GetPromptTemplateResult = {
  /**
   * A prompt template
   */
  template: PromptTemplate;
};

/** @internal */
export const GetPromptTemplateResult$inboundSchema: z.ZodType<
  GetPromptTemplateResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  template: PromptTemplate$inboundSchema,
});

/** @internal */
export type GetPromptTemplateResult$Outbound = {
  template: PromptTemplate$Outbound;
};

/** @internal */
export const GetPromptTemplateResult$outboundSchema: z.ZodType<
  GetPromptTemplateResult$Outbound,
  z.ZodTypeDef,
  GetPromptTemplateResult
> = z.object({
  template: PromptTemplate$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPromptTemplateResult$ {
  /** @deprecated use `GetPromptTemplateResult$inboundSchema` instead. */
  export const inboundSchema = GetPromptTemplateResult$inboundSchema;
  /** @deprecated use `GetPromptTemplateResult$outboundSchema` instead. */
  export const outboundSchema = GetPromptTemplateResult$outboundSchema;
  /** @deprecated use `GetPromptTemplateResult$Outbound` instead. */
  export type Outbound = GetPromptTemplateResult$Outbound;
}

export function getPromptTemplateResultToJSON(
  getPromptTemplateResult: GetPromptTemplateResult,
): string {
  return JSON.stringify(
    GetPromptTemplateResult$outboundSchema.parse(getPromptTemplateResult),
  );
}

export function getPromptTemplateResultFromJSON(
  jsonString: string,
): SafeParseResult<GetPromptTemplateResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPromptTemplateResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPromptTemplateResult' from JSON`,
  );
}
