#!/usr/bin/env bash

set -euo pipefail

#MISE dir="{{ config_root }}/server"
#MISE description="Tag the gram CLI with an updated version."

REPO_ROOT=$(git rev-parse --show-toplevel)
CLI_ROOT="${REPO_ROOT}/server/cmd/cli/gram"
VERSION_FILE="${CLI_ROOT}/version/version.go"

VERSION=

detect_version() {
  VERSION="$(grep 'const Version = ' "$VERSION_FILE" |
    sed 's/const Version = "\(.*\)"/\1/')"
}

looks_like_semver() {
    [[ "$1" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]
}

verify_version() {
  if ! looks_like_semver "$VERSION"; then
    echo "Error: Version '$VERSION' does not look like semantic version (vX.Y.Z)"
    exit 1
  fi

  ask_version_correct
}

ensure_no_dirty() {
  if ! git diff-index --quiet HEAD -- "$CLI_ROOT"; then
    echo
    echo "Error: Git working directory is dirty. Please commit or stash your changes before releasing."
    echo "Only committed changes will be included in this release."
    echo
    exit 1
  fi
}

ask_version_correct() {
  ensure_no_dirty

  printf '\nCurrent version: %s (%s)\n' "$VERSION" "$VERSION_FILE"
  read -p "Is $VERSION the correct version to tag? Have you bumped it if needed? (y/N): " -r
  echo

  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Please update the version in $VERSION_FILE and re-run this task."
    exit 1
  fi
}

tag_version() {
  local tag="server/cmd/cli/gram/$VERSION"
  set -x
  git tag "$tag"
  set +x

  echo "Successfully tagged commit with $tag"
  echo "You can now push the tag with: git push origin $tag"
}

main() {
  detect_version
  verify_version
  tag_version
}

main "$@"
